@model IEnumerable<TesisProj.Areas.Simulaciones.Models.Simulacion>
@using Telerik.Web.Mvc.UI

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Seleccion de variables Sensibles</h2>
@{ 
    Html.Telerik().Grid(Model)
        .Name("Grid")
        .DataKeys(keys => keys.Add(c => c.Id))
        .Columns(columns =>
            {
                columns.Bound(c => c.proyecto.Nombre).Title("");
                columns.Bound(c => c.proyecto.fecha).Title("");
                columns.Bound(c => c.proyecto.Resultado).Title("");
                columns.Bound(c => c.proyecto.parametro.Nombre).Title("");
                columns.Bound(c => c.proyecto.parametro.valor).Title("");
                columns.Bound(c => c.proyecto.parametro.interes).Title("");
            })
        .RowTemplate(grid => @<text>

            <h1 class="t-widget">@item.proyecto.Nombre</h1>
            <div class="employee-details">
                 <table>
                   <tr><td><b>Fecha de Registo</b></td><td>@item.proyecto.fecha</td></tr>
                   <tr><td><b>Numero de Periodos</b></td><td>@item.proyecto.parametro.periodos</td></tr>
                   <tr><td><b>Creador del Proyecto</b></td><td>Pedro Curich</td></tr>
                   <tr><td><b>Colaboradores</b></td><td>
                                                        <table>
                                                            <tr><td>Miguel Vega</td></tr>
                                                            <tr><td>Luis Mendoza</td></tr>
                                                            <tr><td>Otros</td></tr>
                                                        </table>
                                               </td></tr> 
                    </table>
                <table>
                    <tr>
                        <td><h1 class="t-widget">Parametros para Simulacion</h1></td>
                    </tr>
                    <tr>
                        <td>
                            <table>
                                <tr>
                                    <td><b>Parametro 1</b></td>
                                    <td>@item.proyecto.parametro.Nombre</td>
                                    <td>@grid.CustomCommandToolBarButton("Asignacion", "Asignacion","Index", "Parametro", new {p=item.proyecto.parametro.Id,y=item.proyecto.Id })</td>
                                </tr>
                                <tr>
                                    <td><b>Parametro 2</b></td>
                                    <td>@item.proyecto.parametro.Nombre</td>
                                    <td>@grid.CustomCommandToolBarButton("Asignacion", "Asignacion","Index", "Parametro", new {p=item.proyecto.parametro.Id,y=item.proyecto.Id })</td>
                                </tr>
                                <tr>
                                    <td><b>Parametro 3</b></td>
                                    <td>@item.proyecto.parametro.Nombre</td>
                                    <td>@grid.CustomCommandToolBarButton("Asignacion", "Asignacion","Index", "Parametro", new {p=item.proyecto.parametro.Id,y=item.proyecto.Id })</td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
           </text>
        )
                .DataBinding(dataBinding => dataBinding.Server()
            .Update("Edit", "Simulacion"))
        .Sortable()
        .Editable(editing => editing.Mode(GridEditMode.PopUp))
        .Scrollable(scrolling => scrolling.Height(500))
        .Pageable()
        .Render();
}
@section HeadContent {
    <style type="text/css">
        .employee-details
        {
            padding:.8em .6em;
            display:inline-block;
        }
        .employee-details
        {
            display:block;
        }
        
        .employee-details:after
        {
            content:"";
            display:block;
            clear:both;
        }
        
        .employee-details dl,
        .employee-details dt,
        .employee-details dd
        {
            margin:0;
            padding:0;
        }
        
        .employee-details img,
        .employee-details h3,
        .employee-details dl,
        .commands
        {
            float:left;
            clear:none;
            margin:0 14px 0 0;
        }
        .employee-details h3,
        .employee-details dl
        {
            width:200px;
            min-height:115px;
            border-width:0 1px 0 0;
            background-color:transparent;
            color:inherit;
        }
        
        .employee-details h3
        {
            width:90px;
            padding:0;
            font-size:1.5em;
            padding-right:20px;
        }
        
        .employee-details dt
        {
            font-weight:bold;
        }
    .field-validation-error
    {
        position: absolute;
        display: block;
    }
    
    * html .field-validation-error { position: relative; }
    *+html .field-validation-error { position: relative; }
    
    .field-validation-error span
    {
        position: absolute;
        white-space: nowrap;
        color: red;
        padding: 17px 5px 3px;
        background: transparent url('<%= Url.Content("~/Content/Common/validation-error-message.png") %>')
            no-repeat 0 0;
    }
    
    /* in-form editing */
    .t-edit-form-container
    {
        width: 350px;
        margin: 1em;
    }
    
    .t-edit-form-container .editor-label,
    .t-edit-form-container .editor-field
    {
        padding-bottom: 1em;
        float: left;
    }
    
    .t-edit-form-container .editor-label
    {
        width: 30%;
        text-align: right;
        padding-right: 3%;
        clear: left;
    }
    
    .t-edit-form-container .editor-field
    {
        width: 60%;
    }
    </style>
}

