@using TesisProj.Areas.Plantilla.Models
@using System.Collections

@model IEnumerable<TesisProj.Areas.Modelo.Models.Elemento>

@{
    ViewBag.Title = "Elementos: " + ViewBag.Proyecto;
    Layout = "~/Views/Shared/_Layout.cshtml";
    IList<TipoElemento> tipos = ViewBag.TipoElementos;
    bool IsCreador = ViewBag.IsCreador;
    bool IsEditor = ViewBag.IsEditor;
    bool IsRevisor = ViewBag.IsRevisor;

}

<h2>Elementos de @ViewBag.Title</h2>

<p>
    <br />
    <a class="btn btn-inverse" style="color: #E6F0F2"href="@Url.Action("Console", "Proyecto", new { Area = "Modelo",id = ViewBag.ProyectoId  })"">
  	    <i class="icon-arrow-left icon-white"></i>Regresar
    </a>
    <br /> <br />
</p> 

@foreach (var tipo in tipos)
{
    <table class="table table-hover table-striped table-bordered">
    <tr class="success">
        <td style="width: 300px">
            <u><b>@tipo.NombrePlural:</b></u>
        </td>
        <td>
            @if(!IsRevisor){
                <b>@Html.ActionLink("Agregar", "CreateElemento", "Proyecto", routeValues: new { Area = "Modelo", idProyecto = ViewBag.ProyectoId, idTipoElemento = tipo.Id }, htmlAttributes: null)</b>
            }
        </td>
    </tr>

    @foreach (var element in Model.Where(e => e.IdTipoElemento == tipo.Id))
    {
        <tr>
            <td>
                @Html.DisplayFor(e => element.Nombre)
            </td>
            <td>
                @Html.ActionLink("Ver", "Programa", "Proyecto", routeValues: new { Area = "Modelo", id = element.Id }, htmlAttributes: null) 
                
                @if(!IsRevisor){

                    @Html.Raw(" | ") @Html.ActionLink("Editar", "EditElemento", "Proyecto", routeValues: new { Area = "Modelo", id = element.Id }, htmlAttributes: null)
                    @Html.Raw(" | ") @Html.ActionLink("Parámetros", "Catalog", "Proyecto", routeValues: new { Area = "Modelo", id = element.Id }, htmlAttributes: null)
                    @Html.Raw(" | ") @Html.ActionLink("Fórmulas", "Cuaderno", "Proyecto", routeValues: new { Area = "Modelo", id = element.Id }, htmlAttributes: null)
                    @Html.Raw(" | ") @Html.ActionLink("Eliminar", "DeleteElemento", "Proyecto", routeValues: new { Area = "Modelo", id = element.Id }, htmlAttributes: new { onclick="return DeleteConfirm()" })
                }
            </td>
        </tr>
    }
    </table>    
}


<p>
    <br />
    <a class="btn btn-inverse" style="color: #E6F0F2"href="@Url.Action("Console", "Proyecto", new { Area = "Modelo",id = ViewBag.ProyectoId  })"">
  	    <i class="icon-arrow-left icon-white"></i>Regresar
    </a>
</p> 


<script>
    function DeleteConfirm(){
        if (confirm("¿Está seguro que desea eliminar el registro?"))
            return true;
        else
            return false;     
    }

    function DuplicateConfirm() {
        if (confirm("¿Está seguro que desea copiar el registro a una plantilla?"))
            return true;
        else
            return false;
    }
</script>