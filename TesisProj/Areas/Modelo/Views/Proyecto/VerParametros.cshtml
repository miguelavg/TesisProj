@using TesisProj.Areas.Modelo.Models

@model List<TesisProj.Areas.Modelo.Models.Celda>

@{
    ViewBag.Title = "Parámetros: " + ViewBag.Proyecto;
    Layout = "~/Views/Shared/_Layout.cshtml";
    IList<Parametro> parametros = ViewBag.Parametros;
    int Horizonte = ViewBag.Horizonte;
    int IdElemento = ViewBag.IdElemento;
    int IdProyecto = ViewBag.IdProyecto;
}

<h2>Ver parámetros de @ViewBag.Elemento (@ViewBag.Proyecto)</h2>

<p>
    <br />
    <a class="btn btn-inverse" style="color: #E6F0F2;"href="@Url.Action("SetParametros", new { id = ViewBag.IdElemento })"">
  	    <i class="icon-pencil icon-white"></i>Editar
    </a>
    <a style="margin:5px"></a>
    <a class="btn btn-inverse" style="color: #E6F0F2"href="@Url.Action("Catalog", "Proyecto", new { Area = "Modelo",id = ViewBag.IdElemento   })"">
  	    <i class="icon-arrow-left icon-white"></i>Regresar
    </a> <br /><br />
</p>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Valores</legend>

        <div style="overflow: auto; max-height: 600px;  max-width: 1050px">
        <table class="table table-hover table-striped table-bordered">
                <tr>
                    <th>
                        Parámetro
                    </th>
                    <th>
                        Referencia
                    </th>
                    @for (int periodo = 1; periodo <= Horizonte; periodo++)
                    {
                        <th style="text-align:center;">
                            @periodo
                        </th>
                    }
                </tr>

            @foreach (var parametro in parametros)
            {
                <tr>
                    <td>
                        @parametro.Nombre
                    </td>
                    <td>
                        @parametro.Referencia
                    </td>
    
                @foreach (var celda in Model.Where(c => c.IdParametro == parametro.Id).OrderBy(c => c.Periodo))
                {
                    <td>
                        @String.Format("{0:#,##0.##}",celda.Valor)
                        @Html.HiddenFor(model => model[Model.IndexOf(celda)].Id)
                        @Html.HiddenFor(model => model[Model.IndexOf(celda)].IdParametro)
                        @Html.HiddenFor(model => model[Model.IndexOf(celda)].Periodo)
                    </td>
                }
                </tr>
            }

            </table>
            </div>
        </fieldset>

        @Html.Hidden("IdElemento")
        @Html.Hidden("IdProyecto")
}

<p>
    <a class="btn btn-inverse" style="color: #E6F0F2"href="@Url.Action("Catalog", "Proyecto", new { Area = "Modelo",id = ViewBag.IdElemento   })"">
  			<i class="icon-arrow-left icon-white"></i>Regresar
    </a>
</p> 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

