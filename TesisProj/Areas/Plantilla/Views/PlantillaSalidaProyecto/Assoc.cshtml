@model TesisProj.Areas.Plantilla.Models.PlantillaSalidaProyecto

@{
    ViewBag.Title = "Salidas: " + @ViewBag.Plantilla;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Asociar operaciones a @Model.Nombre (@ViewBag.Plantilla)</h2>

<p>
    <br />
    <a class="btn btn-inverse" style="color: #E6F0F2"href="@Url.Action("Index", new { id = @Model.IdPlantillaProyecto })">
  	    <i class="icon-arrow-left icon-white"></i>Regresar
    </a><br /><br />
</p>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Salida</legend>

        <table class="table table-hover table-striped table-bordered" style="width: 500px">
            <tr>
                <th>
                    Operaciones disponibles
                </th>
                <th></th>
                <th>
                     Operaciones asociados
                </th>
                <th></th>
            </tr>
            <tr>
                <td>
                    @Html.ListBox("Opciones", ViewBag.Opciones as MultiSelectList, new { @Size = 20, style = "width: 350px;" })
                </td>
                <td style="text-align:center; vertical-align:middle">
                    <button type="button" onclick="move_right();">></button>
                    <button type="button" onclick="move_left();"><</button>
                    <button type="button" onclick="moveall_right();">>></button>
                    <button type="button" onclick="moveall_left();"><<</button>
                </td>
                <td>
                    @Html.ListBox("Asociados", ViewBag.Asociados as MultiSelectList, new { @Size = 20, style = "width: 350px;"  })
                </td>
                <td style="text-align:center; vertical-align:middle">
                    <button type="button" onclick="move_up();">˄</button>
                    <button type="button" onclick="move_down();">˅</button>
                    <button type="button" onclick="move_top();">˄˄</button>
                    <button type="button" onclick="move_bottom();">˅˅</button>
                </td>
            </tr>
        </table>

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Nombre)
        @Html.HiddenFor(model => model.Secuencia)
        @Html.HiddenFor(model => model.IdPlantillaProyecto)

        <p>
            <input type="submit" value="Guardar" />
        </p>
    </fieldset>
}

<p>
    <a class="btn btn-inverse" style="color: #E6F0F2"href="@Url.Action("Index", new { id = @Model.IdPlantillaProyecto })">
  	    <i class="icon-arrow-left icon-white"></i>Regresar
    </a>
</p>


<script type="text/javascript">
    $(function () {
        $("form").submit(function (e) {
            $("#Asociados option").attr("selected", "selected");
        });
    });
    
    function move_up() {
        list = document.getElementById("Asociados");

        for (var i = 0; i < list.options.length; i++) {
            if (list.options[i].selected == true) {

                if (i == 0) continue;

                var currText = list.options[i].text;
                var currValue = list.options[i].value;
                var swapText = list.options[i - 1].text;
                var swapValue = list.options[i - 1].value;
                var currSel = list.options[i].selected;
                var swapSel = list.options[i - 1].selected;

                list.options[i].text = swapText;
                list.options[i].value = swapValue;
                list.options[i].selected = swapSel;
                list.options[i - 1].text = currText;
                list.options[i - 1].value = currValue;
                list.options[i - 1].selected = currSel;
            }
        }
    }

    function move_down() {
        list = document.getElementById("Asociados");

        for (var i = list.options.length - 1; i > -1; i--) {
            if (list.options[i].selected == true) {

                if (i == list.options.length - 1) continue;

                var currText = list.options[i].text;
                var currValue = list.options[i].value;
                var swapText = list.options[i + 1].text;
                var swapValue = list.options[i + 1].value;
                var currSel = list.options[i].selected;
                var swapSel = list.options[i + 1].selected;

                list.options[i].text = swapText;
                list.options[i].value = swapValue;
                list.options[i].selected = swapSel;
                list.options[i + 1].text = currText;
                list.options[i + 1].value = currValue;
                list.options[i + 1].selected = currSel;
            }
        }
    }

    function move_bottom() {
        list = document.getElementById("Asociados");

        for (var i = 0, k = 0; i < list.options.length && k < list.options.length; i++, k++) {
            if (list.options[i].selected == true) {
                var option = list.options[i];
                list.remove(i);
                list.add(option);

                i--;
            }
        }
    }

    function move_top() {
        list = document.getElementById("Asociados");

        for (var i = 0, k = 0; i < list.options.length && k < list.options.length; i++, k++) {
            if (list.options[i].selected == false) {
                var option = list.options[i];
                list.remove(i);
                list.add(option);

                i--;
            }
        }
    }

    function move_right() {
        target = document.getElementById("Asociados");
        source = document.getElementById("Opciones");

        for (var i = 0; i < target.options.length; i++) {
            target.options[i].selected = false;
        }

        for (var i = 0; i < source.options.length; i++) {
            if (source.options[i].selected == true) {
                var option = source.options[i];
                var newOption = document.createElement("option");
                newOption.value = option.value;
                newOption.text = option.text;
                newOption.selected = true;
                target.add(newOption);
            }
        }
    }

    function move_left() {
        target = document.getElementById("Opciones");
        source = document.getElementById("Asociados");

        for (var i = 0; i < target.options.length; i++) {
            target.options[i].selected = false;
        }

        for (var i = source.options.length - 1; i > -1; i--) {
            if (source.options[i].selected == true) {
                var newValue = source.options[i].value;
                source.remove(i);

                for (var k = 0; k < target.options.length; k++) {
                    if (target.options[k].value == newValue) {
                        target.options[k].selected = true;
                        break;
                    }
                }
            }
        }
    }

    function moveall_right() {
        target = document.getElementById("Asociados");
        source = document.getElementById("Opciones");

        for (var i = 0; i < target.options.length; i++) {
            target.remove(0);
        }

        for (var i = 0; i < source.options.length; i++) {
            var option = source.options[i];
            var newOption = document.createElement("option");
            newOption.value = option.value;
            newOption.text = option.text;
            newOption.selected = true;
            target.add(newOption);
        }
    }

    function moveall_left() {
        target = document.getElementById("Opciones");
        source = document.getElementById("Asociados");

        for (var i = 0; i < target.options.length; i++) {
            target.options[i].selected = false;
        }

        for (var i = source.options.length - 1; i > -1; i--) {
            var newValue = source.options[i].value;
            source.remove(i);

            for (var k = 0; k < target.options.length; k++) {
                if (target.options[k].value == newValue) {
                    target.options[k].selected = true;
                    break;
                }
            }
        }
    }

 </script>
